version: '3'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: binam
      POSTGRES_PASSWORD: Bhandari
      POSTGRES_DB: binam
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U binam"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always

  minio-server:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    volumes:
      - minio_data:/data
      - ./minio-cors.json:/config/minio/cors.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  userform:
    build:
      context: ./userform
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: binam
      DB_PASSWORD: Bhandari
      DB_NAME: binam
      MINIO_ENDPOINT: 172.17.0.1:9000
      MINIO_ACCESS_KEY: "DXeRSzJ1flBOehb5Bc1o"
      MINIO_SECRET_KEY: "tgCTzYPo8YeWzktmIl9A35PqR1TsiPN8wjOtslii"
      MINIO_SSL: "false"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      minio-server:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - app-network
    volumes:
      - ./frontend:/app

volumes:
  minio_data:
    driver: local
  postgres_data:
    external: true

networks: 
  app-network:
    driver: bridge
